@inject NavigationManager navManager
<div class="">
    <img src="logo.svg" class="logo" />
</div>

<button class="@toggleIcon" aria-controls="primary-navigation text-white" @onclick="ToggleNav">
</button>

<nav class="">
    <ul id="primary-navigation" class="primary-navigation flex @visibilityClass p-0 m-0">
        <li class="@navMenuClass @GetActive("" , NavLinkMatch.All)">
            <a href="/" class="tracking-widest ff-sans-cond uppercase ">
                <span aria-hidden="true" class="opacity-40">00</span>Home
            </a>
        </li>
        <li class="@navMenuClass @GetActive("destination" , NavLinkMatch.All)">
            <a href="/destination" class="tracking-widest ff-sans-cond uppercase ">
                <span aria-hidden="true" class="opacity-40">01</span>Destination
            </a>
        </li>
        <li class="@navMenuClass @GetActive("crew" , NavLinkMatch.All)">
            <a href="/crew" class="tracking-widest ff-sans-cond uppercase ">
                <span aria-hidden="true" class="opacity-40">02</span>Crew
            </a>
        </li>
        <li class="@navMenuClass @GetActive("technology" , NavLinkMatch.All)">
            <a href="/technology" class="tracking-widest ff-sans-cond uppercase ">
                <span aria-hidden="true" class="opacity-40">03</span>Technology
            </a>
        </li>
    </ul>
</nav>

@code {
    private bool showNav = true;
    private string visibilityClass => showNav ? "visible" : null;
    private string toggleIcon => showNav ? "mobile-nav-close" : "mobile-nav-tog";

    public void ToggleNav()
    {
        showNav = !showNav;
    }

    private string navMenuClass = "border-b-2 border-transparent py-5  hover:border-gray-500 focus:border-gray-500";

    protected override void OnInitialized() => navManager.LocationChanged += (s, e) => StateHasChanged();

    bool IsActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix)
    {
        var relativePath = navManager.ToBaseRelativePath(navManager.Uri).ToLower().Split('/').First();
        return navLinkMatch == NavLinkMatch.All ? relativePath == href.ToLower() : relativePath.StartsWith(href.ToLower());
    }

    string GetActive(string href, NavLinkMatch navLinkMatch = NavLinkMatch.Prefix) => IsActive(href, navLinkMatch) ? "active" : "";
}



